{"version":3,"sources":["api/client.ts","api/config.ts","components/PostCard/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["client","config","instance","this","axios","create","baseURL","headers","Accept","PostCard","React","post","setPost","loading","setLoading","feedback","setFeedback","handleResponseError","status","severity","message","loadPost","a","get","data","request","finally","Box","mb","clone","Alert","CircularProgress","color","Card","variant","CardHeader","title","CardContent","body","App","className","CssBaseline","mt","Container","fixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAWMA,EAAS,IALd,WAAmBC,GAA6B,yBAFzCC,cAEwC,EAC9CC,KAAKD,SAAWE,IAAMC,OAAOJ,GAIhB,CCToB,CAClCK,QAAS,uCACTC,QAAS,CAAEC,OAAQ,sBDOWN,SEmFhBO,EA1EY,WAAO,IAAD,EACRC,aADQ,mBACzBC,EADyB,KACnBC,EADmB,OAEFF,YAAwB,GAFtB,mBAEzBG,EAFyB,KAEhBC,EAFgB,OAGAJ,aAHA,mBAGzBK,EAHyB,KAGfC,EAHe,KAKzBC,EAAsB,SAACC,GAC3B,OAASA,GACP,KAAK,IACHF,EAAY,CACVG,SAAU,QACVC,QAAS,iBAEX,MACF,KAAK,IACHJ,EAAY,CACVG,SAAU,UACVC,QAAS,2CAEX,MACF,QACEJ,EAAY,CACVG,SAAU,QACVC,QAAS,sBAMZC,EAAWX,cAAA,sBAAmB,gCAAAY,EAAA,+EAEPtB,EAAOuB,IAAU,YAFV,gBAErBZ,EAFqB,EAE3Ba,KACPZ,EAAQD,GACRK,EAAY,CACXG,SAAU,UACVC,QAAS,oBANwB,gDAS/B,KAAMK,UACAP,EAAW,KAAMO,QAAjBP,OACJD,EAAqBC,IAXQ,yDAcjC,IASH,OAPAR,aAAgB,WACfW,IACKK,SAAQ,WACPZ,GAAW,QAEf,CAACO,IAGH,qCACGN,GACD,cAACY,EAAA,EAAD,CAAKC,GAAI,EAAGC,OAAK,EAAjB,SACC,cAACC,EAAA,EAAD,CAAOX,SAAUJ,EAASI,SAA1B,SACEJ,EAASK,YAIXP,GAAW,cAACkB,EAAA,EAAD,CAAkBC,MAAM,aAClCnB,GAAkC,aAAf,OAARE,QAAQ,IAARA,OAAA,EAAAA,EAAUI,WACnB,qCACE,0CACA,eAACc,EAAA,EAAD,CAAMC,QAAQ,WAAd,UACE,cAACC,EAAA,EAAD,CAAYC,MAAK,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAMyB,QACzB,cAACC,EAAA,EAAD,iBAAc1B,QAAd,IAAcA,OAAd,EAAcA,EAAM2B,iBCnEjBC,EAbH,WACV,OACE,sBAAKC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,IACA,cAACd,EAAA,EAAD,CAAKe,GAAI,EAAGb,OAAK,EAAjB,SACE,cAACc,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAAC,EAAD,YCEKC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8b80e2e7.chunk.js","sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport { config } from './config';\n\nexport class Api {\n\tpublic instance: AxiosInstance;\n\n\tpublic constructor(config: AxiosRequestConfig) {\n\t\tthis.instance = axios.create(config);\n\t}\n}\n\nconst client = new Api(config).instance;\nexport { client };\n","import { AxiosRequestConfig } from 'axios';\n\nconst config: AxiosRequestConfig = {\n\tbaseURL: 'https://jsonplaceholder.typicode.com',\n\theaders: { Accept: 'application/json' },\n};\n\nexport { config };\n","import * as React from 'react';\nimport {\n\tBox,\n\tCard,\n\tCardContent,\n\tCardHeader,\n\tCircularProgress,\n} from \"@material-ui/core\";\nimport Alert, { AlertProps } from '@material-ui/lab/Alert';\nimport { client } from \"../../api/client\";\n\ntype Feedback = Required<Pick<AlertProps, \"severity\">> & {\n\tmessage: string\n};\n\nexport interface Post {\n\ttitle: string,\n\tbody: string,\n}\n\nconst PostCard: React.FC = () => {\n\tconst [post, setPost] = React.useState<Post>()\n\tconst [loading, setLoading] = React.useState<boolean>(true);\n\tconst [feedback, setFeedback] = React.useState<Feedback>();\n\n  const handleResponseError = (status: number) => {\n    switch ( status ) {\n      case 500:\n        setFeedback({\n          severity: \"error\",\n          message: \"Erro interno\",\n        });\n        break;\n      case 404:\n        setFeedback({\n          severity: \"warning\",\n          message: \"O post informado nÃ£o foi encontrado\",\n        });\n        break;\n      default:\n        setFeedback({\n          severity: \"error\",\n          message: \"Erro Inesperado\",\n        });\n        break;\n    }\n  }\n\n\tconst loadPost = React.useCallback( async () => {\n\t\ttry {\n\t\t\tconst {data: post} = await client.get<Post>('/posts/1');\n\t\t\tsetPost(post);\n\t\t\tsetFeedback({\n\t\t\t\tseverity: \"success\",\n\t\t\t\tmessage: \"Post encontrado\",\n\t\t\t});\n\t\t}catch (error) {\n\t\t\tif(error.request){\n\t\t\t\tconst { status } = error.request;\n        handleResponseError( status );\n\t\t\t}\n\t\t}\n\t}, []);\n\n\tReact.useEffect(() => {\n\t\tloadPost()\n      .finally(() => {\n        setLoading(false)\n      });\n\t}, [loadPost])\n\n\treturn (\n\t\t<>\n\t\t\t{ feedback &&\n\t\t\t\t<Box mb={2} clone>\n\t\t\t\t\t<Alert severity={feedback.severity}>\n\t\t\t\t\t\t{feedback.message}\n\t\t\t\t\t</Alert>\n        </Box>\n\t\t\t}\n\t\t\t{ loading && <CircularProgress color=\"inherit\" /> }\n\t\t\t{ !loading && feedback?.severity === 'success' &&\n        <>\n          <h1>Seu post</h1>\n          <Card variant=\"outlined\">\n            <CardHeader title={post?.title}/>\n            <CardContent>{post?.body}</CardContent>\n          </Card>\n        </>\n\t\t\t}\n\t\t</>\n\t);\n};\n\nexport default PostCard;\n","import React from 'react';\nimport './App.css';\n\nimport { Container, CssBaseline, Box } from \"@material-ui/core\";\nimport { PostCard } from \"./components\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Box mt={2} clone>\n        <Container fixed>\n          <PostCard />\n        </Container>\n      </Box>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}