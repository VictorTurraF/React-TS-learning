{"version":3,"sources":["api/client.ts","api/config.ts","components/PostCard/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["client","instanceConfig","instance","this","axios","create","baseURL","headers","Accept","PostCard","React","post","setPost","loading","setLoading","feedback","setFeedback","handleResponseError","status","severity","message","loadPost","a","get","postData","data","request","finally","Box","mb","clone","Alert","CircularProgress","color","Card","variant","CardHeader","title","CardContent","body","App","className","CssBaseline","mt","Container","fixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sWAYeA,EADA,IALb,WAAmBC,GAAqC,yBAFjDC,cAEgD,EACrDC,KAAKD,SAAWE,IAAMC,OAAOJ,GAIlB,CCToB,CACjCK,QAAS,uCACTC,QAAS,CAAEC,OAAQ,sBDOUN,SEoFhBO,EA3EY,WAAO,IAAD,EACPC,aADO,mBACxBC,EADwB,KAClBC,EADkB,OAEDF,YAAwB,GAFvB,mBAExBG,EAFwB,KAEfC,EAFe,OAGCJ,aAHD,mBAGxBK,EAHwB,KAGdC,EAHc,KAKzBC,EAAsB,SAACC,GAC3B,OAAQA,GACN,KAAK,IACHF,EAAY,CACVG,SAAU,QACVC,QAAS,iBAEX,MACF,KAAK,IACHJ,EAAY,CACVG,SAAU,UACVC,QAAS,2CAEX,MACF,QACEJ,EAAY,CACVG,SAAU,QACVC,QAAS,sBAMXC,EAAWX,cAAA,sBAAkB,gCAAAY,EAAA,+EAEEtB,EAAOuB,IAAU,YAFnB,gBAEjBC,EAFiB,EAEvBC,KACRb,EAAQY,GACRR,EAAY,CACVG,SAAU,UACVC,QAAS,oBANoB,gDAS3B,KAAMM,UACAR,EAAW,KAAMQ,QAAjBR,OACRD,EAAoBC,IAXS,yDAchC,IASH,OAPAR,aAAgB,WACdW,IACGM,SAAQ,WACPb,GAAW,QAEd,CAACO,IAGF,qCACIN,GACA,cAACa,EAAA,EAAD,CAAKC,GAAI,EAAGC,OAAK,EAAjB,SACE,cAACC,EAAA,EAAD,CAAOZ,SAAUJ,EAASI,SAA1B,SACGJ,EAASK,YAIdP,GAAW,cAACmB,EAAA,EAAD,CAAkBC,MAAM,aAClCpB,GAAkC,aAAf,OAARE,QAAQ,IAARA,OAAA,EAAAA,EAAUI,WAEtB,qCACE,0CACA,eAACe,EAAA,EAAD,CAAMC,QAAQ,WAAd,UACE,cAACC,EAAA,EAAD,CAAYC,MAAK,OAAE1B,QAAF,IAAEA,OAAF,EAAEA,EAAM0B,QACzB,cAACC,EAAA,EAAD,iBAAc3B,QAAd,IAAcA,OAAd,EAAcA,EAAM4B,iBCtEjBC,EAXH,kBACV,sBAAKC,UAAU,MAAf,UACE,cAACC,EAAA,EAAD,IACA,cAACd,EAAA,EAAD,CAAKe,GAAI,EAAGb,OAAK,EAAjB,SACE,cAACc,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAAC,EAAD,YCKOC,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.574d813a.chunk.js","sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig } from 'axios';\nimport config from './config';\n\nexport class Api {\n  public instance: AxiosInstance;\n\n  public constructor(instanceConfig: AxiosRequestConfig) {\n    this.instance = axios.create(instanceConfig);\n  }\n}\n\nconst client = new Api(config).instance;\nexport default client;\n","import { AxiosRequestConfig } from 'axios';\n\nconst config: AxiosRequestConfig = {\n  baseURL: 'https://jsonplaceholder.typicode.com',\n  headers: { Accept: 'application/json' },\n};\n\nexport default config;\n","import * as React from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  CircularProgress,\n} from '@material-ui/core';\nimport Alert, { AlertProps } from '@material-ui/lab/Alert';\nimport client from '../../api/client';\n\ntype Feedback = Required<Pick<AlertProps, 'severity'>> & {\n  message: string\n};\n\nexport interface Post {\n  title: string,\n  body: string,\n}\n\nconst PostCard: React.FC = () => {\n  const [post, setPost] = React.useState<Post>();\n  const [loading, setLoading] = React.useState<boolean>(true);\n  const [feedback, setFeedback] = React.useState<Feedback>();\n\n  const handleResponseError = (status: number) => {\n    switch (status) {\n      case 500:\n        setFeedback({\n          severity: 'error',\n          message: 'Erro interno',\n        });\n        break;\n      case 404:\n        setFeedback({\n          severity: 'warning',\n          message: 'O post informado nÃ£o foi encontrado',\n        });\n        break;\n      default:\n        setFeedback({\n          severity: 'error',\n          message: 'Erro Inesperado',\n        });\n        break;\n    }\n  };\n\n  const loadPost = React.useCallback(async () => {\n    try {\n      const { data: postData } = await client.get<Post>('/posts/1');\n      setPost(postData);\n      setFeedback({\n        severity: 'success',\n        message: 'Post encontrado',\n      });\n    } catch (error) {\n      if (error.request) {\n        const { status } = error.request;\n        handleResponseError(status);\n      }\n    }\n  }, []);\n\n  React.useEffect(() => {\n    loadPost()\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [loadPost]);\n\n  return (\n    <>\n      { feedback && (\n        <Box mb={2} clone>\n          <Alert severity={feedback.severity}>\n            {feedback.message}\n          </Alert>\n        </Box>\n      )}\n      { loading && <CircularProgress color=\"inherit\" /> }\n      { !loading && feedback?.severity === 'success'\n        && (\n        <>\n          <h1>Seu post</h1>\n          <Card variant=\"outlined\">\n            <CardHeader title={post?.title} />\n            <CardContent>{post?.body}</CardContent>\n          </Card>\n        </>\n        )}\n    </>\n  );\n};\n\nexport default PostCard;\n","import React from 'react';\nimport './App.css';\n\nimport { Container, CssBaseline, Box } from '@material-ui/core';\nimport { PostCard } from './components';\n\nconst App = () => (\n  <div className=\"App\">\n    <CssBaseline />\n    <Box mt={2} clone>\n      <Container fixed>\n        <PostCard />\n      </Container>\n    </Box>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}